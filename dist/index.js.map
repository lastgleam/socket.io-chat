{"version":3,"sources":["../index.js"],"names":["express","require","app","server","Server","options","pingTimeout","pingInterval","io","listen","process","env","PORT","console","log","get","req","res","sendFile","__dirname","users","rooms","on","socket_id","socket","id","to","emit","user","roomName","includes","index","indexOf","splice","Object","keys","forEach","length","join","push","in","info","leave","undefined","data"],"mappings":"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","file":"index.js","sourcesContent":["const express = require('express');\nconst app = express();\nconst server = require('http').Server(app);\nconst options = {\n    pingTimeout: 60000,\n    pingInterval: 3000\n};\nconst io = require('socket.io')(server, options);\n\nserver.listen(process.env.PORT || 30000, () => {\n    console.log('listening on *:30000');\n});\n\napp.get('/', (req, res) => {\n    res.sendFile(__dirname + '/index.html');\n});\n\nconst users = {};\nconst rooms = {};\n\nio.on('connection', socket => {\n    const socket_id = socket.id;\n    users[socket_id] = {};\n\n    console.log(socket.id + ' has connected');\n    io.to(socket.id).emit('getId', socket.id);\n    console.log('users', users);\n    console.log('rooms', rooms);\n    io.emit('rooms', rooms);\n\n    socket.on('disconnect', () => {\n        io.emit('user disconnected');\n        let user = users[socket.id];\n        if (rooms[user.roomName] && rooms[user.roomName].includes(socket.id)) {\n            let index = rooms[user.roomName].indexOf(socket.id);\n            rooms[user.roomName].splice(index, 1);\n            delete user.roomName;\n        }\n        delete users[socket.id];\n        Object.keys(rooms).forEach( index => {\n            if(rooms[index].length < 1){\n                delete rooms[index];\n            }\n        });\n        console.log(socket.id + ' has disconnected');\n        console.log('users', users);\n        console.log('rooms', rooms);\n        io.emit('rooms', rooms);\n    });\n\n    socket.on('join', (roomName, user) => {\n        socket.join(roomName);\n        if (rooms[roomName]) {\n            if (!rooms[roomName].includes(user.socket_id)) {\n                rooms[roomName].push(user.socket_id);\n            }\n        } else {\n            rooms[roomName] = [user.socket_id];\n        }\n        users[user.socket_id] = user;\n        io.in(roomName).emit(socket_id, roomName);\n        const info = {\n            'status': 'join',\n            'user': user\n        };\n        console.log(socket_id + ' has joined to ' + roomName);\n        console.log('users', users);\n        console.log('rooms', rooms);\n        io.in(roomName).emit('info', info);\n        io.emit('rooms', rooms);\n    });\n\n    socket.on('leave', (roomName, user) => {\n        socket.leave(roomName);\n        if (rooms[roomName] && rooms[roomName].includes(user.socket_id)) {\n            let index = rooms[roomName].indexOf(user.socket_id);\n            if (index !== null && index !== undefined) {\n                rooms[roomName].splice(index, 1);\n                delete users[user.socket_id].roomName;\n            }\n            if (rooms[roomName].length < 1) {\n                delete rooms[roomName];\n                console.log(rooms);\n            }\n            let info = {\n                'status': 'leave',\n                'user': user,\n                'roomName': roomName\n            };\n            console.log(user.socket_id + ' has left from ' + roomName);\n            socket.in(roomName).emit('info', info);\n            console.log('users', users);\n            console.log('rooms', rooms);\n        } else {\n            console.log(socket.id + \"is not entered to any rooms.\");\n        }\n        io.emit('rooms', rooms);\n    });\n\n    socket.on('rooms', () => {\n        io.emit('rooms', rooms);\n    });\n\n    socket.on('send', data => {\n        io.in(data.roomName).emit('publish', data);\n        io.emit('rooms', rooms);\n    });\n\n    socket.on('change', data => {\n        console.log('chaging!!', data);\n        io.in(data.user.roomName).emit('changeInfo', data);\n    });\n\n    function leave(){\n\n    }\n});"]}